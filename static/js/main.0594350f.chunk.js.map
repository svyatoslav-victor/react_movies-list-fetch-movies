{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/movies.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","request","name","a","fetch","response","ok","Error","statusText","json","FindMovie","onAdd","useState","title","findTitle","setMovie","findMovie","result","type","value","placeholder","classnames","Response","onChange","event","target","onClick","App","state","addMovie","newMovie","existingMovie","find","item","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"uVAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uDCfRC,EAAO,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACEC,MAAM,8CAAD,OAA+CF,IADtD,WACfG,EADe,QAGPC,GAHO,sBAIb,IAAIC,MAAJ,kBAAqBF,EAASG,aAJjB,gCAOdH,EAASI,QAPK,2CAAH,sDCWPC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,EAA2BC,mBAAyB,IAApD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAgB,IAA1C,mBAAOtB,EAAP,KAAcyB,EAAd,KAIMC,EAAS,uCAAG,4BAAAb,EAAA,+EAF8BF,EAIPY,GAFvB,OAERI,EAFQ,OAIdF,EAASE,GAJK,gDAMdV,MAAM,GAAD,OAAIjB,EAAMiB,QAND,yDAAH,qDAUf,OACE,qCACE,uBAAMhB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,wBAGE,qBAAKA,UAAU,UAAf,SACE,uBACE2B,KAAK,OACLhB,KAAK,QACLiB,MAAON,EACPO,YAAY,0BACZ7B,UAAW8B,IAAW,QAAS,CAC7B,YAAgC,UAAnB/B,EAAMgC,WAErBC,SAAU,SAACC,GACTV,EAAUU,EAAMC,OAAON,YAKT,UAAnB7B,EAAMgC,UACL,mBAAG/B,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE2B,KAAK,SACL3B,UAAU,kBACVmC,QAAS,WACPV,KAJJ,4BAWF,qBAAKzB,UAAU,UAAf,SACE,wBACE2B,KAAK,SACL3B,UAAU,oBACVmC,QAAS,WACgB,SAAnBpC,EAAMgC,WACRX,EAAMrB,GACNwB,EAAU,MANhB,qCAgBN,sBAAKvB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACoB,SAAnBD,EAAMgC,UAAuB,cAAC,EAAD,CAAWhC,MAAOA,WC9E3CqC,EAAb,4MACEC,MAAe,CACb9B,OAAQ,IAFZ,EAKE+B,SAAW,SAACC,GACV,IAAMC,EAAgB,EAAKH,MAAM9B,OAC9BkC,MAAK,SAAAC,GAAI,OAAIA,EAAKjC,SAAW8B,EAAS9B,UAErC8B,IAAaC,GACf,EAAKG,UAAS,SAAAN,GAAK,MAAK,CACtB9B,OAAO,GAAD,mBAAM8B,EAAM9B,QAAZ,CAAoBgC,SAXlC,4CAgBE,WACE,IAAQhC,EAAWqC,KAAKP,MAAhB9B,OAER,OACE,sBAAKP,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWoB,MAAOwB,KAAKN,oBAzBjC,GAAyBO,aCLzBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0594350f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","export const request = async (name: string) => {\n  const response = await fetch(`https://www.omdbapi.com/?apikey=42caae26&t=${name}`);\n\n  if (!response.ok) {\n    throw new Error(`ERROR - ${response.statusText}`);\n  }\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classnames from 'classnames';\nimport { request } from '../../api/movies';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, findTitle] = useState<Movie['Title']>('');\n  const [movie, setMovie] = useState<Movie>({} as Movie);\n\n  const getMovie = (movieName: Movie['Title']) => request(movieName);\n\n  const findMovie = async () => {\n    try {\n      const result: Movie = await getMovie(title);\n\n      setMovie(result);\n    } catch (error) {\n      Error(`${movie.Error}`);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          Movie title\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              placeholder=\"Enter a title to search\"\n              className={classnames('input', {\n                'is-danger': movie.Response === 'False',\n              })}\n              onChange={(event) => {\n                findTitle(event.target.value);\n              }}\n            />\n          </div>\n\n          {movie.Response === 'False' && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                findMovie();\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (movie.Response === 'True') {\n                  onAdd(movie);\n                  findTitle('');\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie.Response === 'True' && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: [],\n  };\n\n  addMovie = (newMovie: Movie) => {\n    const existingMovie = this.state.movies\n      .find(item => item.imdbID === newMovie.imdbID);\n\n    if (newMovie && !existingMovie) {\n      this.setState(state => ({\n        movies: [...state.movies, newMovie],\n      }));\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}